@startuml diagram
!include ../style/commons.style

package com.affinitynow.app {
    package model {
        class User {
            + id: long
            + pseudo: string
            + topic: Set<Topic>
            + match: Matching
            + User(nom: string)
            + getPseudo(): string
            + setPseudo(): void
            + getTopic(): string
            + setTopic(): void
            + addTopic(): void
            + removeTopic(): void
            + equals(user: User): boolean
            + hashcode(): integer
            + toString(): string
        }

        class Topic {
            + id: long
            + nom: string
            + User: User
            + this(nom: string)
            + getNom(): string
            + setNom(): void
            + getUser(): string
            + setUser(): void
        }

        interface Matching {
            + match(user1: User): double
        }

        class ScoreMatching implements Matching {
            + match(user1: User): double
        }
    }

    package user {
        package controler {
            class UserControler {
                + User: User
                + createNewUser(): User , POST/User
                + removeTopicById(id: long): User , DELETE/User
                + addTopicsForUserById(id: long, topics: List<Topics>): void , POST/User/{id}/topics
                + getUserMatchingListById(id: long) , GET/User/{id}/match
            }
        }
        package dto {
            class UserDto {

            }
        }
        package repository {
            class UserRepository {

            }
        }
    }
}



User *--> "1" Matching
User "1" --> "*" Topic
UserControler --> User: "uses"
UserDto --> UserRepository : "uses"
@enduml